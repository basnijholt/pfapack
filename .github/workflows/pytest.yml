name: pytest
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y gfortran libblas-dev liblapack-dev ninja meson

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install gcc openblas lapack ninja meson

    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-name: test
        create-args: >-
          python=${{ matrix.python-version }}
          gfortran
          openblas
          lapack
          ninja
          meson
          pip
        cache-downloads: true
        cache-environment: true

    - name: Build and run C/Fortran tests
      run: |
        # Print environment for debugging
        which gfortran
        gfortran --version

        # Install and run tests
        pip install -e . --config-settings=setup-args="-Dbuild_tests=enabled"
        cd build/cp* && meson test --verbose

    - name: Install test dependencies
      run: |
        pip install ".[test]"

    - name: Run Python tests
      run: |
        pytest tests --cov --cov-append --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
